{"version":3,"sources":["logo.svg","components/ChartBars.jsx","components/ChartLine.jsx","utils/useSmoothedSeries.js","components/Chart.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["ChartBars","processedData","scaleX","scaleY","color","gutter","gRef","useRef","barWidth","useMemo","Math","max","abs","range","length","useEffect","current","d3","selectAll","data","enter","append","classed","d","console","log","attr","Date","date","value","domain","class","ref","ChartLine","props","g","select","datum","x","y","useSimplifiedSeries","yFunction","map","i","useSmoothedSeries","n","filter","j","reduce","a","b","min","undefined","ChartContainer","styled","div","SvgContainer","Chart","datesRange","padding","top","right","bottom","left","breakPoint","svgRef","useDimensions","onResize","observe","unobserve","width","height","entry","smoothedNewCases","bangkok","new_cases","bangkokNewCases","nationalNewCases","thailand","NewConfirmed","bangkokNewDeaths","new_death","smoothedNewDeaths","paddedWidth","paddedHeight","scaleYDeaths","svg","call","tickValues","tickFormat","DateTime","fromJSDate","toISODate","id","className","GraphicsContainer","App","useState","nationalData","setNationalData","bangkokData","setBangkokData","now","minus","days","startOf","startDate","endDate","dates","plus","push","axios","get","then","res","Papa","parse","header","dynamicTyping","filteredNational","Data","dt","endOf","filteredGSheets","fromISO","combined","substr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21f650cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartBars = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  color,\n  gutter = 2,\n}) => {\n\n  const gRef = useRef(null);\n\n  const barWidth = useMemo(() => {\n    return Math.max(\n      Math.abs(scaleX.range()[1] - scaleX.range()[0]) / (processedData?.length || 1) - gutter,\n      1)\n  }, [gutter, processedData, scaleX, scaleY]);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    var barGroup = g.selectAll(\"g.bar\")\n      .data(processedData)\n      .enter()\n      .append(\"g\")\n      .classed(\"bar\", true);\n\n    barGroup.selectAll(\"rect.b\")\n      .data(d => {\n        console.log(d)\n        return [d];\n      })\n      .enter()\n      .append(\"rect\")\n      .classed(\"b\", true)\n      .attr(\"x\", d => scaleX(new Date(d.date)))\n      .attr(\"y\", d => scaleY(d.value))\n      .attr(\"width\", barWidth)\n      .attr(\"height\", d => scaleY(scaleY.domain()[1] - d.value))\n      .attr(\"fill\", color);\n\n  }, [processedData, scaleX, scaleY]);\n\n  return <>\n    <g class=\"bars\" ref={gRef}></g>\n  </>;\n}\n\nexport default ChartBars;\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartLine = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  gutter = 2,\n  color = \"#000\",\n  ...props\n}) => {\n\n  const gRef = useRef(null);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    console.log(processedData);\n\n    g.select(\"path\")\n      .datum(processedData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\"stroke-width\", 3)\n      .attr(\"d\", d3.line()\n        // .curve(d3.curveCatmullRom)\n        .x(d => scaleX(new Date(d.date)))\n        .y(d => scaleY(d.value))\n      )\n\n  }, [processedData]);\n\n  return <>\n    <g class=\"line\" ref={gRef} {...props}>\n      <path />\n    </g>\n  </>;\n}\n\nexport default ChartLine;\n","import React, { useMemo } from \"react\";\r\n\r\nexport const useSimplifiedSeries = (data, yFunction) => {\r\n    return useMemo(() => {\r\n      return data.map((x, i) => {\r\n        return {\r\n          date: x.date,\r\n          value: yFunction(x)\r\n        }\r\n      });\r\n    }, [data, yFunction]);\r\n  };\r\n\r\nexport const useSmoothedSeries = (data, yFunction, n = 7) => {\r\n  return useMemo(() => {\r\n    return data.map((x, i) => {\r\n      return (x && yFunction(x)) \r\n      ? {\r\n        date: x.date,\r\n        value:\r\n          data\r\n            .map(yFunction)\r\n            .filter((d, j) => i - n <= j && j <= i)\r\n            .reduce((a, b) => a + b, 0) / (Math.min(n, i) || 1),\r\n      }\r\n      : undefined;\r\n    }).filter(x => x !== undefined);\r\n  }, [data, yFunction, n]);\r\n};\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nimport ChartBars from './ChartBars';\nimport ChartLine from './ChartLine';\nimport { useSimplifiedSeries, useSmoothedSeries } from '../utils/useSmoothedSeries';\n\nconst ChartContainer = styled.div`\n  /* padding: 30px; */\n  width: 100%;\n  margin-top: 10px;\n  /* height: 50vh; */\n  flex: 1;\n  position: relative;\n  transition: all 0.2s;\n`;\n\nconst SvgContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`\n\nconst Chart = ({\n  processedData,\n  datesRange,\n  padding = { top: 0, right: 0, bottom: 20, left: 40 },\n  breakPoint = 0.7\n}) => {\n\n  const svgRef = useRef(null);\n  const { observe, unobserve, width, height, entry } = useDimensions({\n    onResize: ({ observe, unobserve, width, height, entry }) => {\n      unobserve(); // To stop observing the current target element\n      observe(); // To re-start observing the current target element\n    },\n  });\n\n  const gap = 50;\n\n  const smoothedNewCases = useSmoothedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  // const smoothedNewCasesNational = useSmoothedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewCases = useSimplifiedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  const nationalNewCases = useSimplifiedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewDeaths = useSimplifiedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n  const smoothedNewDeaths = useSmoothedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n\n  const paddedWidth = useMemo(() => width - padding.left - padding.right, [width, padding]);\n  const paddedHeight = useMemo(() => height - padding.top - padding.bottom, [height, padding]);\n\n  const scaleX = useMemo(() => d3.scaleTime()\n    .domain(d3.extent(processedData, d => new Date(d.date)))\n    .range([0, paddedWidth])\n    , [processedData, paddedWidth]);\n\n  const scaleY = useMemo(() => d3.scaleLinear()\n    .domain([0, d3.max(processedData, d => +d?.thailand?.NewConfirmed ?? 0)])\n    // .domain([0, d3.max(processedData, d => +d?.bangkok?.new_cases ?? 0)])\n    .range([paddedHeight * breakPoint, 0])\n    , [processedData, paddedHeight]);\n\n  const scaleYDeaths = useMemo(() => d3.scaleLinear()\n    .domain([0, d3.max(processedData, d => +d?.bangkok?.new_death ?? 0)])\n    .range([paddedHeight * (1 - breakPoint) - gap, 0])\n    , [processedData, paddedHeight]);\n\n  useEffect(() => {\n    if (!svgRef.current)\n      return;\n\n    var svg = d3.select(svgRef.current)\n\n    svg.select(\"g.chart\")\n      .attr(\"transform\",\n        `translate(${padding.left},${padding.top})`);\n\n    console.log(processedData);\n\n    svg.select(\"g.x-axis\")\n      .attr(\"transform\", `translate(0,${paddedHeight * breakPoint})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n      );\n\n    svg.select(\"g.y-axis\")\n      .call(d3.axisLeft(scaleY));\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    svg.select(\"g.chart-death\")\n      .attr(\"transform\",\n        `translate(${padding.left},${padding.top + paddedHeight * breakPoint + gap})`);\n\n    svg.select(\"g.x-axis-deaths\")\n      // .attr(\"transform\", `translate(0,${paddedHeight * (1 - breakPoint)})`)\n      .attr(\"transform\", `translate(0,${paddedHeight * (1 - breakPoint) - gap})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n      );\n\n    svg.select(\"g.y-axis-deaths\")\n      .call(d3.axisLeft(scaleYDeaths));\n\n    // // Add the line\n    // svg.append(\"path\")\n    //   .datum(processedData)\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"steelblue\")\n    //   .attr(\"stroke-width\", 1.5)\n    //   .attr(\"d\", d3.line()\n    //     .x(d => scaleX(new Date(d.date)))\n    //     .y(d => scaleY(d?.bangkok?.new_cases ?? 0))\n    //   )\n  }, [processedData]);\n\n  return <>\n    <ChartContainer>\n      <SvgContainer ref={observe}>\n        <svg\n          id=\"chart\"\n          className=\"d3-component\"\n          width={width}\n          height={height}\n          ref={svgRef}\n        >\n          <g class=\"chart\">\n            <ChartBars\n              processedData={nationalNewCases}\n              color=\"#fdd\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            />\n            <ChartBars\n              processedData={bangkokNewCases}\n              color=\"#faa\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            />\n            <ChartLine\n              processedData={smoothedNewCases}\n              color=\"#f00\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            />\n            {/* <ChartLine\n              processedData={smoothedNewCasesNational}\n              color=\"#f00\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            /> */}\n            <g class=\"x-axis\"></g>\n            <g class=\"y-axis\"></g>\n          </g>\n\n          <g class=\"chart-death\">\n            <ChartBars\n              processedData={bangkokNewDeaths}\n              color=\"#bbb\"\n              scaleX={scaleX}\n              scaleY={scaleYDeaths}\n            />\n            <ChartLine\n              processedData={smoothedNewDeaths}\n              color=\"#222\"\n              scaleX={scaleX}\n              scaleY={scaleYDeaths}\n            />\n            <g class=\"x-axis-deaths\"></g>\n            <g class=\"y-axis-deaths\"></g>\n          </g>\n        </svg>\n      </SvgContainer>\n    </ChartContainer>\n  </>;\n}\n\nexport default Chart;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from \"./components/Chart\";\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { DateTime } from 'luxon';\nimport styled from 'styled-components';\n\nconst GraphicsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n`\n\nconst api_url_daily_cases = \"https://covid19.th-stat.com/api/open/timeline\";\nconst gsheets_url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR5KEVlTJbefwhG7GXg5swMW1rDSctbXuwZR-omHnxdet_DReCYnu0r_CVgzLTxwPqKlz4WMvKOppv1/pub?gid=0&single=true&output=csv\";\n\nconst convDate = (x) => {\n  return `${x.substr(6, 4)}-${x.substr(0, 2)}-${x.substr(3, 2)}`\n}\n\nfunction App() {\n  const [nationalData, setNationalData] = useState();\n  const [bangkokData, setBangkokData] = useState();\n\n  const [startDate, setStartDate] = useState(DateTime.now().minus({ days: 60 }).startOf('day'))\n  const [endDate, setEndDate] = useState(DateTime.now().startOf('day'))\n\n  const datesRange = useMemo(() => {\n    const dates = [];\n    let d = startDate;\n    while (d <= endDate) {\n      d = d.plus({ days: 1 });\n      dates.push(d.toISODate())\n    }\n    return dates;\n  }, [startDate, endDate]);\n\n\n  useEffect(() => {\n    axios.get(api_url_daily_cases).then((res) => {\n      console.log(res.data);\n      setNationalData(res.data);\n    });\n\n    axios.get(gsheets_url).then((res) => {\n      const data = Papa.parse(res.data, {\n        header: true,\n        dynamicTyping: true\n      });\n      console.log('gsheets', data);\n      setBangkokData(data);\n      // setData(res.data);\n    });\n  }, []);\n\n  const processedData = useMemo(() => {\n    if (!nationalData || !bangkokData)\n      return [];\n\n    const filteredNational = nationalData.Data.filter(x => {\n      const dt = DateTime.fromJSDate(new Date(x.Date));\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n\n    const filteredGSheets = bangkokData.data.filter(x => {\n      const dt = DateTime.fromISO(x.date);\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n\n    const combined = datesRange.map(date => {\n      return {\n        date: date,\n        thailand: filteredNational?.filter(d => {\n          // console.log('zzzz', new Date(d.Date), date)\n          return convDate(d.Date) === date\n          // return true\n          // // return DateTime.fromJSDate(new Date(d.Date)).toISODate() === date\n        })?.[0] ?? {},\n        bangkok: filteredGSheets?.filter(d => d.date === date)?.[0] ?? {}\n      }\n    })\n\n    console.log('gs', filteredGSheets);\n\n    return combined;\n  }, [nationalData, bangkokData, startDate, endDate, datesRange]);\n\n  return (\n    <div className=\"App\">\n      <GraphicsContainer>\n        <h1>สถานการณ์โควิดใน กทม.</h1>\n        <Chart\n          datesRange={datesRange}\n          processedData={processedData} />\n      </GraphicsContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}