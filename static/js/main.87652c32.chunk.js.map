{"version":3,"sources":["logo.svg","components/ChartBars.jsx","components/ChartLine.jsx","utils/useSmoothedSeries.js","components/Button.jsx","components/Chart.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["ChartBars","processedData","scaleX","scaleY","color","gutter","gRef","useRef","barWidth","useMemo","Math","max","abs","range","length","useEffect","current","d3","selectAll","data","enter","append","classed","d","attr","Date","date","value","domain","class","ref","ChartLine","nMark","markOffset","props","g","console","log","select","datum","x","y","markPos","transform","x1","y1","x2","y2","stroke","textAnchor","dominantBaseline","style","fill","fontSize","fontWeight","useSimplifiedSeries","yFunction","map","i","useSmoothedSeries","n","filter","j","reduce","a","b","min","undefined","Button","styled","button","isFullWidth","css","mb","ChartContainer","div","Chart","datesRange","padding","top","right","bottom","left","svgRef","breakPoint","width","height","pad","boxHeight","deathBoxHeight","boxWidth","boxPadding","textBoxWidth","topOffset","chartPadding","useDimensions","onResize","observe","unobserve","entry","toThaiDate","w","h","dt","Number","isNaN","get","lastestDay","lastEntry","DateTime","fromISO","dayNum","weekday","iso","dateStr","dayColor","weekdayStr","weekdayNum","smoothedNewCases","bangkok","new_cases","bangkokNewCases","bangkokNewDeaths","thailand","NewConfirmed","new_death","smoothedNewDeaths","paddedWidth","paddedHeight","scaleYDeaths","svg","call","tickValues","tickFormat","fromJSDate","toISODate","tickSize","tickPadding","ticks","id","className","viewBox","backgroundColor","rx","toLocaleString","new_cases_outskirt","opacity","accumulated_cases","new_death_outskirt","accumulated_death","textAlign","margin","display","as","href","onClick","elm","document","getElementById","offsetHeight","offsetWidth","domtoimage","toPng","then","dataUrl","link","createElement","download","click","catch","err","error","flexGrow","flexBasis","marginRight","target","marginLeft","lineHeight","Container","App","useState","nationalData","setNationalData","bangkokData","setBangkokData","now","minus","months","startOf","startDate","setStartDate","endDate","setEndDate","dates","push","plus","days","axios","res","Papa","parse","header","dynamicTyping","filteredNational","Data","endOf","filteredGSheets","combined","substr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87652c32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartBars = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  color,\n  gutter = 2,\n}) => {\n\n  const gRef = useRef(null);\n\n  const barWidth = useMemo(() => {\n    return Math.max(\n      Math.abs(scaleX.range()[1] - scaleX.range()[0]) / (processedData?.length || 1) - gutter,\n      1)\n  }, [gutter, processedData, scaleX, scaleY]);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    var barGroup = g.selectAll(\"g.bar\")\n      .data(processedData)\n      .enter()\n      .append(\"g\")\n      .classed(\"bar\", true);\n\n    barGroup.selectAll(\"rect.b\")\n      .data(d => {\n        // console.log(d)\n        return [d];\n      })\n      .enter()\n      .append(\"rect\")\n      .classed(\"b\", true)\n      .attr(\"x\", d => scaleX(new Date(d.date)) - barWidth)\n      .attr(\"y\", d => scaleY(d.value))\n      .attr(\"width\", barWidth)\n      .attr(\"height\", d => scaleY(scaleY.domain()[1] - d.value))\n      .attr(\"fill\", color);\n\n  }, [processedData, scaleX, scaleY]);\n\n  return <>\n    <g class=\"bars\" ref={gRef}></g>\n  </>;\n}\n\nexport default ChartBars;\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartLine = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  gutter = 2,\n  color = \"#000\",\n  nMark = 7,\n  markOffset = 24,\n  ...props\n}) => {\n\n  const gRef = useRef(null);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    console.log(processedData);\n\n    g.select(\"path\")\n      .datum(processedData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\"stroke-width\", 3)\n      .attr(\"d\", d3.line()\n        // .curve(d3.curveCatmullRom)\n        .x(d => scaleX(new Date(d.date)))\n        .y(d => scaleY(d.value))\n      )\n\n  }, [processedData]);\n\n\n  const markPos = useMemo(() => {\n    if (processedData.length <= 0) return { x: 0, y: 0 };\n\n    console.log('markPos',\n      processedData,\n      scaleX(new Date(processedData?.[nMark]?.date)),\n      scaleY(processedData?.[nMark]?.value))\n    // const i = Math.min(processedData.length / 2);\n\n    return {\n      x: scaleX(new Date(processedData?.[nMark]?.date)),\n      y: scaleY(processedData?.[nMark]?.value)\n    }\n  }, [processedData, nMark]);\n\n  return <>\n    <g class=\"line\" ref={gRef} {...props}>\n      <path />\n      <g class=\"average-mark\" transform={`translate(${markPos.x},${markPos.y})`}>\n        <line x1={0} y1={0} x2={0} y2={-markOffset} stroke=\"#fff\" />\n        <text textAnchor=\"middle\" dominantBaseline=\"baseline\" y={-markOffset-4} style={{ fill: '#fff' }} fontSize={12} fontWeight=\"400\">ค่าเฉลี่ย 7 วัน</text>\n      </g>\n    </g>\n  </>;\n}\n\nexport default ChartLine;\n","import React, { useMemo } from \"react\";\r\n\r\nexport const useSimplifiedSeries = (data, yFunction) => {\r\n    return useMemo(() => {\r\n      return data.map((x, i) => {\r\n        return {\r\n          date: x.date,\r\n          value: yFunction(x)\r\n        }\r\n      });\r\n    }, [data, yFunction]);\r\n  };\r\n\r\nexport const useSmoothedSeries = (data, yFunction, n = 7) => {\r\n  return useMemo(() => {\r\n    return data.map((x, i) => {\r\n      return (x && (typeof yFunction(x) === 'number'))\r\n      ? {\r\n        date: x.date,\r\n        value: data\r\n          .map(yFunction)\r\n          .filter((d, j) => i - n <= j && j <= i)\r\n          .reduce((a, b) => a + b, 0) / (Math.min(n, i) || 1),\r\n      }\r\n      : undefined;\r\n    }).filter(x => x !== undefined);\r\n  }, [data, yFunction, n]);\r\n};\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    color: #7F353E;\r\n    border: 1px #7F353E solid;\r\n    /* background-color: #C33646;\r\n    color: #fff !important; */\r\n    /* border: none; */\r\n    padding: 6px 12px;\r\n    border-radius: 8px;\r\n    font-family: 'Mitr', sans-serif;\r\n    font-size: 1rem;\r\n    text-decoration: none;\r\n    margin: 0;\r\n    display: inline-block;\r\n    \r\n    ${props => props.isFullWidth && css`\r\n        display: block;\r\n        width: auto;\r\n    `}\r\n\r\n    ${props => props.mb && css`\r\n        margin-bottom: 16px;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #7F353E;\r\n        color: #fff !important;\r\n        border: none;\r\n    }\r\n`;\r\n\r\nexport default Button;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nimport ChartBars from './ChartBars';\nimport ChartLine from './ChartLine';\nimport { useSimplifiedSeries, useSmoothedSeries } from '../utils/useSmoothedSeries';\nimport domtoimage from 'dom-to-image';\nimport Button from './Button';\n\n\nconst ChartContainer = styled.div`\n  /* padding: 30px; */\n  width: 100%;\n  /* margin-top: 10px; */\n  /* height: 50vh; */\n  flex: 1;\n  position: relative;\n  transition: all 0.2s;\n\n  text {\n    font-family: 'Mitr', sans-serif;\n  }\n\n  .axis line, .axis path {\n    stroke: white;\n  }\n\n  .axis text {\n    fill: white;\n    font-size: 12px;\n    font-family: 'Mitr', sans-serif;\n  }\n\n  text {\n    fill: #7F353E;\n  }\n\n  text.text-white {\n    fill: #fff;\n  }\n\n  .y-axis-deaths {\n    opacity: 0.3;\n\n    path {\n      opacity: 0;\n    }\n  }\n\n  .y-axis {\n    opacity: 0.4;\n\n    path {\n      opacity: 0;\n    }\n  }\n\n  .shadow {\n    filter: drop-shadow( 0px 8px 8px rgba(0, 0, 0, .2));\n    /* Similar syntax to box-shadow */\n  }\n\n  .x-axis text { opacity: 0; }\n  .x-axis-deaths text { opacity: 0; }\n`;\n\nconst SvgContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  font-family: 'Mitr', sans-serif;\n\n  \n`;\n\nconst Chart = ({\n  processedData,\n  datesRange,\n  padding = { top: 18, right: 0, bottom: 12, left: 40 },\n  breakPoint = 0.7\n}) => {\n\n  const svgRef = useRef(null);\n  const canvasRef = useRef(null);\n  const imageLinkRef = useRef(null);\n\n  const width = 640;\n  const height = 640;\n  const pad = 32;\n  const gutter = 24;\n  const boxHeight = 240;\n  const deathBoxHeight = 160;\n  const boxWidth = width - pad * 2;\n  const boxPadding = 16;\n  const textBoxWidth = 200;\n  const topOffset = 120;\n  const chartPadding = padding;\n\n  const { observe, unobserve, w, h, entry } = useDimensions({\n    onResize: ({ observe, unobserve, width, height, entry }) => {\n      unobserve(); // To stop observing the current target element\n      observe(); // To re-start observing the current target element\n    },\n  });\n\n  const gap = 50;\n\n  const toThaiDate = (dt) => {\n    const monthString = [\n      '',\n      'ม.ค.',\n      'ก.พ.',\n      'มี.ค.',\n      'เม.ย.',\n      'พ.ค.',\n      'มิ.ย.',\n      'ก.ค.',\n      'ส.ค.',\n      'ก.ย.',\n      'ต.ค.',\n      'พ.ย.',\n      'ธ.ค. ',\n    ]\n\n    return (dt && !Number.isNaN(dt.get('day')))\n      ? `${dt.get('day')} ${monthString[dt.get('month')]} ${(dt.get('year') + 543) % 100}`\n      : '';\n  }\n\n  const lastestDay = useMemo(() => {\n    const weekDayString = [\n      'อาทิตย์',\n      'จันทร์',\n      'อังคาร',\n      'พุธ',\n      'พฤหัส',\n      'ศุกร์',\n      'เสาร์',\n      'อาทิตย์',\n    ]\n\n    const weekDayColor = [\n      '#C33646',\n      '#D5A21F',\n      '#C55A9A',\n      '#2B9649',\n      '#D5682A',\n      '#31A0C3',\n      '#7E48A4',\n      '#C33646',\n    ]\n\n    const lastEntry = processedData[processedData.length - 1];\n    const dt = DateTime.fromISO(lastEntry?.date);\n    const dayNum = dt.weekday;\n    return {\n      iso: lastEntry?.date,\n      dateStr: toThaiDate(dt),\n      dayColor: weekDayColor[dayNum],\n      weekdayStr: weekDayString[dayNum],\n      weekdayNum: dayNum\n    }\n  }, [processedData]);\n\n  const smoothedNewCases = useSmoothedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  // const smoothedNewCasesNational = useSmoothedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewCases = useSimplifiedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  const nationalNewCases = useSimplifiedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewDeaths = useSimplifiedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n  const smoothedNewDeaths = useSmoothedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n\n  const paddedWidth = useMemo(() => width - padding.left - padding.right, [width, padding]);\n  const paddedHeight = useMemo(() => height - padding.top - padding.bottom, [height, padding]);\n\n  const scaleX = useMemo(() => d3.scaleTime()\n    .domain(d3.extent(processedData, d => new Date(d.date)))\n    .range([0, boxWidth - boxPadding * 2 - textBoxWidth - chartPadding.left - chartPadding.right])\n    , [processedData, paddedWidth]);\n\n  const scaleY = useMemo(() => d3.scaleLinear()\n    // .domain([0, d3.max(processedData, d => +d?.thailand?.NewConfirmed ?? 0)])\n    .domain([0, d3.max(processedData, d => +d?.bangkok?.new_cases ?? 0)])\n    .range([\n      boxHeight - 2 * boxPadding - chartPadding.top - chartPadding.bottom,\n      0\n    ])\n    , [processedData, paddedHeight]);\n\n  const scaleYDeaths = useMemo(() => d3.scaleLinear()\n    .domain([0, d3.max(processedData, d => +d?.bangkok?.new_death ?? 0)])\n    .range([\n      deathBoxHeight - 2 * boxPadding - chartPadding.top - chartPadding.bottom,\n      0\n    ])\n    , [processedData, paddedHeight]);\n\n  useEffect(() => {\n    if (!svgRef.current)\n      return;\n\n    var svg = d3.select(svgRef.current)\n\n    svg.select(\"g.chart\")\n      .attr(\"transform\",\n        `translate(${pad + textBoxWidth + boxPadding + chartPadding.left},${topOffset + boxPadding + chartPadding.top})`);\n\n    console.log(processedData);\n\n    svg.select(\"g.x-axis\")\n      .attr(\"transform\", `translate(0,${boxHeight - 2 * boxPadding - chartPadding.bottom - chartPadding.top})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n        .tickSize(0)\n        .tickPadding(8)\n      );\n\n    svg.select(\"g.y-axis\")\n      .call(d3.axisLeft(scaleY)\n        .ticks(7)\n        .tickPadding(8)\n        .tickSize(-(boxWidth - textBoxWidth - boxPadding * 2 - padding.left))\n      );\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    svg.select(\"g.chart-death\")\n      .attr(\"transform\",\n        `translate(${pad + textBoxWidth + boxPadding + chartPadding.left},${boxPadding + topOffset + boxHeight + gutter + chartPadding.top})`);\n\n    svg.select(\"g.x-axis-deaths\")\n      // .attr(\"transform\", `translate(0,${paddedHeight * (1 - breakPoint)})`)\n      .attr(\"transform\", `translate(0,${deathBoxHeight - 2 * boxPadding - chartPadding.bottom - chartPadding.top})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n        .tickSize(0)\n        .tickPadding(8)\n      );\n\n    svg.select(\"g.y-axis-deaths\")\n      .call(d3.axisLeft(scaleYDeaths)\n        .ticks(5)\n        .tickPadding(8)\n        .tickSize(-(boxWidth - textBoxWidth - boxPadding * 2 - padding.left))\n      );\n\n    // // Add the line\n    // svg.append(\"path\")\n    //   .datum(processedData)\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"steelblue\")\n    //   .attr(\"stroke-width\", 1.5)\n    //   .attr(\"d\", d3.line()\n    //     .x(d => scaleX(new Date(d.date)))\n    //     .y(d => scaleY(d?.bangkok?.new_cases ?? 0))\n    //   )\n  }, [processedData]);\n\n  const downloadPng = () => {\n    console.log(svgRef.current)\n    const scale = 3;\n    const elm = document.getElementById('container');\n    console.log(elm.offsetHeight, elm.offsetWidth)\n    domtoimage.toPng(elm, {\n      height: elm.offsetHeight * scale,\n      width: elm.offsetWidth * scale,\n      style: {\n        transform: `scale(${scale}) translate(${elm.offsetWidth / scale}px, ${elm.offsetHeight / scale}px)`\n      },\n    })\n      .then(function (dataUrl) {\n        var link = document.createElement('a');\n        link.download = `bkkcovid-${lastestDay.iso}.png`;\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((err) => console.error(err));\n\n    // var svgString = new XMLSerializer().serializeToString(svgRef.current);\n\n    // var canvas = canvasRef.current;\n    // var ctx = canvas.getContext(\"2d\");\n    // var DOMURL = window.self.URL || window.self.webkitURL || window.self;\n    // var img = new Image();\n    // var svg = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\n    // var url = DOMURL.createObjectURL(svg);\n    // img.onload = function () {\n    //   ctx.drawImage(img, 0, 0);\n    //   var png = canvas.toDataURL(\"image/png\");\n    //   let url = png.replace(/^data:image\\/png/, 'data:application/octet-stream');\n    //   imageLinkRef.current.setAttribute('href', url);\n    //   imageLinkRef.current.click();\n\n    //   // document.querySelector('#png-container').innerHTML = '<img src=\"' + png + '\"/>';\n    //   DOMURL.revokeObjectURL(png);\n    // };\n    // img.src = url;\n  };\n\n  return (\n    <>\n      <ChartContainer>\n        {/* <SvgContainer ref={observe}> */}\n        <div id=\"container\">\n          <svg\n            id=\"chart\"\n            className=\"d3-component\"\n            width={'100%'}\n            // height={height}\n            ref={svgRef}\n            viewBox={`0 0 ${width} ${height}`}\n            style={{\n              backgroundColor: '#F3E1E3'\n            }}\n          >\n            <text x={pad} y={pad} fontSize={24} dominantBaseline=\"hanging\" fontWeight=\"600\">สถานการณ์ COVID-19 ใน</text>\n            <text x={pad} y={pad + 20} fontSize={39} dominantBaseline=\"hanging\" fontWeight=\"600\">กรุงเทพมหานคร</text>\n\n            <rect x={width - pad - 160} y={pad} width={160} height={64} rx={16} fill={lastestDay.dayColor} />\n            <text x={width - pad - 80} y={pad + 10} dominantBaseline=\"hanging\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={16} class=\"text-white\">ประจำวัน{lastestDay.weekdayStr}ที่</text>\n            <text x={width - pad - 80} y={pad + 28} dominantBaseline=\"hanging\" textAnchor=\"middle\" fontWeight=\"600\" fontSize={24} class=\"text-white\">{lastestDay.dateStr}</text>\n\n            <g transform={`translate(${pad},${topOffset})`}>\n              <rect width={boxWidth} height={boxHeight} rx={16} fill=\"#C33646\" class=\"shadow\" />\n              <rect width={textBoxWidth} height={boxHeight} rx={16} fill=\"#0002\" />\n              <g transform={`translate(${textBoxWidth / 2},${boxHeight / 2 - 8})`}>\n                <text y={-48} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={24} class=\"text-white\">ผู้ติดเชื้อยืนยัน</text>\n                <text y={0} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"600\" fontSize={60} class=\"text-white\">\n                  +{processedData?.[processedData.length - 1]?.bangkok?.new_cases?.toLocaleString?.()}\n                </text>\n                {((processedData?.[processedData.length - 1]?.bangkok?.new_cases_outskirt ?? null) !== null) &&\n                  <text y={44} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={20} class=\"text-white\">\n                    (ปริมณฑล +{processedData?.[processedData.length - 1]?.bangkok?.new_cases_outskirt?.toLocaleString?.()})\n                  </text>\n                }\n              </g>\n              <text x={textBoxWidth / 2} y={boxHeight - boxPadding} dominantBaseline=\"baseline\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={20} class=\"text-white\" style={{ opacity: 0.6 }}>\n                สะสม {processedData?.[processedData.length - 1]?.bangkok?.accumulated_cases?.toLocaleString?.()} ราย\n              </text>\n\n              {/* AXIS DATE TICKS */}\n              <text\n                x={textBoxWidth + boxPadding + padding.left}\n                y={boxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"start\"\n\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {toThaiDate(DateTime.fromISO(processedData?.[0]?.date))}\n              </text>\n              <text\n                x={boxWidth - boxPadding - padding.right}\n                y={boxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {toThaiDate(DateTime.fromISO(processedData?.[processedData?.length - 1]?.date))}\n              </text>\n              <text y={boxPadding} x={boxWidth - boxPadding} fontSize={12} dominantBaseline=\"hanging\" textAnchor=\"end\" class=\"text-white\" style={{ opacity: 0.6 }}>\n                ข้อมูลย้อนหลัง 2 เดือน\n              </text>\n            </g>\n            <g class=\"chart\">\n              {/* <ChartBars\n              processedData={nationalNewCases}\n              color=\"#fdd\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            /> */}\n              <g class=\"x-axis axis\"></g>\n              <g class=\"y-axis axis\"></g>\n              <ChartBars\n                processedData={bangkokNewCases}\n                color=\"#fff6\"\n                scaleX={scaleX}\n                scaleY={scaleY}\n              />\n              <ChartLine\n                processedData={smoothedNewCases}\n                color=\"#fff\"\n                scaleX={scaleX}\n                scaleY={scaleY}\n              />\n              {/* <ChartLine\n              processedData={smoothedNewCasesNational}\n              color=\"#f00\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            /> */}\n            </g>\n\n            <g transform={`translate(${pad},${topOffset + boxHeight + gutter})`}>\n              <rect width={boxWidth} height={deathBoxHeight} rx={16} fill=\"#333031\" class=\"shadow\" />\n              <rect width={textBoxWidth} height={deathBoxHeight} rx={16} fill=\"#fff1\" />\n              <g transform={`translate(${textBoxWidth / 2},${deathBoxHeight / 2 - 6})`}>\n                <text y={-44} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={24} class=\"text-white\">ผู้เสียชีวิต</text>\n                <text y={0} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"600\" fontSize={48} class=\"text-white\">\n                  +{processedData?.[processedData.length - 1]?.bangkok?.new_death?.toLocaleString?.()}\n                </text>\n                {((processedData?.[processedData.length - 1]?.bangkok?.new_death_outskirt ?? null) !== null) &&\n                  <text y={36} dominantBaseline=\"middle\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={20} class=\"text-white\">\n                    (ปริมณฑล +{processedData?.[processedData.length - 1]?.bangkok?.new_death_outskirt?.toLocaleString?.()})\n                  </text>\n                }\n                <text y={66} dominantBaseline=\"baseline\" textAnchor=\"middle\" fontWeight=\"400\" fontSize={20} class=\"text-white\" style={{ opacity: 0.5 }}>\n                  สะสม {processedData?.[processedData.length - 1]?.bangkok?.accumulated_death?.toLocaleString?.()} ราย\n                </text>\n              </g>\n              {/* AXIS DATE TICKS */}\n              <text\n                x={textBoxWidth + boxPadding + padding.left}\n                y={deathBoxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"start\"\n\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {toThaiDate(DateTime.fromISO(processedData?.[0]?.date))}\n              </text>\n              <text\n                x={boxWidth - boxPadding - padding.right}\n                y={deathBoxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {toThaiDate(DateTime.fromISO(processedData?.[processedData?.length - 1]?.date))}\n              </text>\n              <text y={boxPadding} x={boxWidth - boxPadding} fontSize={12} dominantBaseline=\"hanging\" textAnchor=\"end\" class=\"text-white\" style={{ opacity: 0.5 }}>\n                ข้อมูลย้อนหลัง 2 เดือน\n              </text>\n            </g>\n            <g class=\"chart-death\">\n              <g class=\"x-axis-deaths axis\"></g>\n              <g class=\"y-axis-deaths axis\"></g>\n              <ChartBars\n                processedData={bangkokNewDeaths}\n                color=\"#fff6\"\n                scaleX={scaleX}\n                scaleY={scaleYDeaths}\n              />\n              <ChartLine\n                processedData={smoothedNewDeaths}\n                color=\"#fff\"\n                scaleX={scaleX}\n                scaleY={scaleYDeaths}\n              />\n            </g>\n\n            <text x={pad} y={height - pad - 20} dominantBaseline=\"bottom\" fontWeight=\"400\" fontSize={16} fill=\"#222\">รวบรวมข้อมูลจาก ศบค. และ bangkok.go.th/covid19</text>\n            <text x={pad} y={height - pad} dominantBaseline=\"bottom\" fontWeight=\"400\" fontSize={16} fill=\"#222\">ดูกราฟและไฟล์ข้อมูลได้ที่ taepras.com/bkkcovid19</text>\n\n            <g transform={`translate(${width - pad},${height - pad})`}>\n              <g transform={`translate(-54,-32)`}>\n                {/* <image x=\"-54\" y=\"-32\" width=\"54\" height=\"32\" href=\"/bkkcovid/logo_initials.svg\" /> */}\n                <path d=\"M21.9537 20.21C23.8502 22.7782 26.2604 22.9758 27.4457 22.9758C29.9744 22.9758 31.9499 21.988 33.2538 20.7632C34.2416 19.8149 35.9406 17.7208 35.9406 13.8488C35.9406 10.4508 34.6367 8.31716 33.3724 7.05286C31.4363 5.1168 29.0262 4.7612 27.5247 4.7612C24.3638 4.7612 22.7044 6.46019 21.9537 7.52694V5.31435H17.1333V31.4706H21.9537V20.21ZM26.2209 9.02841C27.3667 9.02841 28.6311 9.463 29.5003 10.2532C30.4485 11.162 30.9622 12.5844 30.9622 13.8488C30.9622 15.1131 30.488 16.5355 29.4608 17.4838C28.8286 18.0764 27.8013 18.7086 26.2209 18.7086C24.7195 18.7086 23.6921 18.1159 23.06 17.5627C22.1117 16.733 21.4795 15.4292 21.4795 13.8488C21.4795 12.2683 22.0327 11.083 23.0995 10.1742C23.9687 9.38397 24.9565 9.02841 26.2209 9.02841Z\" fill=\"#222222\" />\n                <path d=\"M14.5573 10.1777V5.35121H9.7309V0.524704H4.90437V5.35121H0.0778656V10.1777H4.90437V19.5089H9.7309V10.1777H14.5573Z\" fill=\"#222222\" />\n                <path d=\"M14.5574 19.5089H9.7309V24.3354H14.5574V19.5089Z\" fill=\"#222222\" />\n                <path d=\"M52.6494 28.5618V23.7323H34.733V28.5618H52.6494Z\" fill=\"#14E1CA\" />\n              </g>\n            </g>\n            {/* <text x={pad} y={height - pad - 20} dominantBaseline=\"bottom\" fontWeight=\"400\" fontSize={16} fill=\"#222\">รวบรวมข้อมูลจาก ศบค. และ bangkok.go.th/covid19</text>\n          <text x={pad} y={height - pad} dominantBaseline=\"bottom\" fontWeight=\"400\" fontSize={16} fill=\"#222\">ดูกราฟและไฟล์ข้อมูลได้ที่ taepras.com/bkkcovid19</text> */}\n          </svg>\n        </div>\n        <div style={{ textAlign: 'center', margin: '30px' }}>\n          <div style={{ display: 'flex' }}>\n            <Button as=\"a\" href=\"#\" onClick={downloadPng} isFullWidth mb style={{ flexGrow: 1, flexBasis: 0, marginRight: '8px' }}>\n              ดาวน์โหลดไฟล์ภาพ\n            </Button>\n            <Button as=\"a\" href=\"https://docs.google.com/spreadsheets/d/1VY6ddD-DdmgIlX_RiFZnIa7ZFXB-mH8nD0hVxaROrP0/edit#gid=0\" target=\"_blank\" isFullWidth mb style={{ flexGrow: 1, flexBasis: 0, marginLeft: '16px' }}>\n              ดูไฟล์ข้อมูล\n            </Button>\n          </div>\n          <p style={{ lineHeight: 1.2 }}>\n            ขอบคุณข้อมูลตัวเลขจาก <a href=\"https://www.facebook.com/informationcovid19\" target=\"_blank\">ศบค.</a> และ <a href=\"http://www.bangkok.go.th/covid19\" target=\"_blank\">กทม.</a>\n            <br />รวบรวมข้อมูลและทำ visualization โดย\n            <br /><a href=\"https://taepras.com\" target=\"_blank\">ธนวิชญ์ ประสงค์พงษ์ชัย (taepras.com)</a>\n            <br />\n            <br />\n            <a href=\"https://taepras.medium.com/%E0%B8%9A%E0%B8%B1%E0%B8%99%E0%B8%97%E0%B8%B6%E0%B8%81%E0%B8%81%E0%B8%B2%E0%B8%A3-%E0%B9%80%E0%B8%A3%E0%B8%B4%E0%B9%88%E0%B8%A1%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B8%95%E0%B8%B1%E0%B8%A7%E0%B9%80%E0%B8%AD%E0%B8%87-%E0%B8%81%E0%B8%B1%E0%B8%9A%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%9F%E0%B9%82%E0%B8%84%E0%B8%A7%E0%B8%B4%E0%B8%94%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%A3%E0%B8%B8%E0%B8%87%E0%B9%80%E0%B8%97%E0%B8%9E-cbf7d41e2f94\" target=\"_blank\">\n              อ่านที่มาของการทำกราฟนี้ (medium.com)\n            </a>\n          </p>\n        </div>\n        {/* </SvgContainer> */}\n      </ChartContainer>\n    </>\n  );\n}\n\nexport default Chart;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from \"./components/Chart\";\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { DateTime } from 'luxon';\nimport styled from 'styled-components';\n\nconst GraphicsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  /* padding: 30px; */\n`\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 640px;\n  margin: auto;\n`\n\nconst api_url_daily_cases = \"https://covid19.th-stat.com/api/open/timeline\";\nconst gsheets_url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR5KEVlTJbefwhG7GXg5swMW1rDSctbXuwZR-omHnxdet_DReCYnu0r_CVgzLTxwPqKlz4WMvKOppv1/pub?gid=0&single=true&output=csv\";\n\nconst convDate = (x) => {\n  return `${x.substr(6, 4)}-${x.substr(0, 2)}-${x.substr(3, 2)}`\n}\n\nfunction App() {\n  const [nationalData, setNationalData] = useState();\n  const [bangkokData, setBangkokData] = useState();\n\n  const [startDate, setStartDate] = useState(DateTime.now().minus({ months: 2 }).startOf('day'))\n  const [endDate, setEndDate] = useState(DateTime.now().startOf('day'))\n\n  const datesRange = useMemo(() => {\n    const dates = [];\n    let d = startDate;\n    while (d <= endDate) {\n      dates.push(d.toISODate())\n      d = d.plus({ days: 1 });\n    }\n    return dates;\n  }, [startDate, endDate]);\n\n\n  useEffect(() => {\n    axios.get(api_url_daily_cases).then((res) => {\n      console.log(res.data);\n      setNationalData(res.data);\n    });\n\n    axios.get(gsheets_url).then((res) => {\n      const data = Papa.parse(res.data, {\n        header: true,\n        dynamicTyping: true\n      });\n      console.log('gsheets', data);\n      const dt = DateTime.fromISO(data.data[data.data.length - 1].date);\n      setEndDate(dt);\n      setStartDate(dt.minus({ months: 2 }).startOf('day'));\n      setBangkokData(data);\n      // setData(res.data);\n    });\n  }, []);\n\n  const processedData = useMemo(() => {\n    if (!nationalData || !bangkokData)\n      return [];\n\n    const filteredNational = nationalData.Data.filter(x => {\n      const dt = DateTime.fromJSDate(new Date(x.Date));\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n\n    // console.log('bkk', nationalData);\n    // console.log('bkk', bangkokData);\n    const filteredGSheets = bangkokData.data.filter(x => {\n      const dt = DateTime.fromISO(x.date);\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n    // console.log('bkk', filteredGSheets);\n\n    const combined = datesRange.map(date => {\n      return {\n        date: date,\n        thailand: filteredNational?.filter(d => {\n          // console.log('zzzz', new Date(d.Date), date)\n          return convDate(d.Date) === date\n          // return true\n          // // return DateTime.fromJSDate(new Date(d.Date)).toISODate() === date\n        })?.[0] ?? {},\n        bangkok: filteredGSheets?.filter(d => d.date === date)?.[0] ?? {}\n      }\n    })\n\n    console.log('gs', filteredGSheets, combined);\n\n    return combined;\n  }, [nationalData, bangkokData, startDate, endDate, datesRange]);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        {/* <h1>สถานการณ์โควิดใน กทม.</h1> */}\n        <Chart\n          datesRange={datesRange}\n          processedData={processedData} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}