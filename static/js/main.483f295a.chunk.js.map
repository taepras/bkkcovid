{"version":3,"sources":["logo.svg","components/ChartBars.jsx","components/ChartLine.jsx","utils/useSmoothedSeries.js","components/Chart.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["ChartBars","processedData","scaleX","scaleY","color","gutter","gRef","useRef","barWidth","useMemo","Math","max","abs","range","length","useEffect","current","d3","selectAll","data","enter","append","classed","d","console","log","attr","Date","date","value","domain","class","ref","ChartLine","props","g","select","datum","x","y","useSimplifiedSeries","yFunction","map","i","useSmoothedSeries","n","filter","j","reduce","a","b","min","undefined","ChartContainer","styled","div","SvgContainer","Chart","datesRange","padding","top","right","bottom","left","svgRef","breakPoint","canvasRef","width","height","pad","boxHeight","deathBoxHeight","boxWidth","textBoxWidth","topOffset","chartPadding","useDimensions","onResize","observe","unobserve","entry","lastestDay","w","h","lastEntry","dt","DateTime","fromISO","dayNum","weekday","iso","dateStr","get","dayColor","weekdayStr","weekdayNum","smoothedNewCases","bangkok","new_cases","bangkokNewCases","bangkokNewDeaths","thailand","NewConfirmed","new_death","smoothedNewDeaths","paddedWidth","paddedHeight","scaleYDeaths","svg","call","tickValues","tickFormat","fromJSDate","toISODate","tickSize","tickPadding","ticks","boxPadding","id","style","textAlign","display","className","backgroundColor","fontSize","dominantBaseline","fontFamily","fontWeight","rx","fill","textAnchor","transform","toLocaleString","accumulated_cases","new_death_outskirt","accumulated_death","onClick","elm","document","getElementById","offsetHeight","offsetWidth","domtoimage","toPng","then","dataUrl","link","createElement","download","href","click","catch","err","error","GraphicsContainer","App","useState","nationalData","setNationalData","bangkokData","setBangkokData","now","minus","months","startOf","startDate","setStartDate","endDate","setEndDate","dates","push","plus","days","axios","res","Papa","parse","header","dynamicTyping","filteredNational","Data","endOf","filteredGSheets","combined","substr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.483f295a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartBars = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  color,\n  gutter = 2,\n}) => {\n\n  const gRef = useRef(null);\n\n  const barWidth = useMemo(() => {\n    return Math.max(\n      Math.abs(scaleX.range()[1] - scaleX.range()[0]) / (processedData?.length || 1) - gutter,\n      1)\n  }, [gutter, processedData, scaleX, scaleY]);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    var barGroup = g.selectAll(\"g.bar\")\n      .data(processedData)\n      .enter()\n      .append(\"g\")\n      .classed(\"bar\", true);\n\n    barGroup.selectAll(\"rect.b\")\n      .data(d => {\n        console.log(d)\n        return [d];\n      })\n      .enter()\n      .append(\"rect\")\n      .classed(\"b\", true)\n      .attr(\"x\", d => scaleX(new Date(d.date)) - barWidth)\n      .attr(\"y\", d => scaleY(d.value))\n      .attr(\"width\", barWidth)\n      .attr(\"height\", d => scaleY(scaleY.domain()[1] - d.value))\n      .attr(\"fill\", color);\n\n  }, [processedData, scaleX, scaleY]);\n\n  return <>\n    <g class=\"bars\" ref={gRef}></g>\n  </>;\n}\n\nexport default ChartBars;\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nconst ChartLine = ({\n  processedData = [],\n  scaleX,\n  scaleY,\n  gutter = 2,\n  color = \"#000\",\n  ...props\n}) => {\n\n  const gRef = useRef(null);\n\n  useEffect(() => {\n    if (!gRef.current)\n      return;\n\n    var g = d3.select(gRef.current);\n\n    console.log(processedData);\n\n    g.select(\"path\")\n      .datum(processedData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\"stroke-width\", 3)\n      .attr(\"d\", d3.line()\n        // .curve(d3.curveCatmullRom)\n        .x(d => scaleX(new Date(d.date)))\n        .y(d => scaleY(d.value))\n      )\n\n  }, [processedData]);\n\n  return <>\n    <g class=\"line\" ref={gRef} {...props}>\n      <path />\n    </g>\n  </>;\n}\n\nexport default ChartLine;\n","import React, { useMemo } from \"react\";\r\n\r\nexport const useSimplifiedSeries = (data, yFunction) => {\r\n    return useMemo(() => {\r\n      return data.map((x, i) => {\r\n        return {\r\n          date: x.date,\r\n          value: yFunction(x)\r\n        }\r\n      });\r\n    }, [data, yFunction]);\r\n  };\r\n\r\nexport const useSmoothedSeries = (data, yFunction, n = 7) => {\r\n  return useMemo(() => {\r\n    return data.map((x, i) => {\r\n      return (x && yFunction(x)) \r\n      ? {\r\n        date: x.date,\r\n        value:\r\n          data\r\n            .map(yFunction)\r\n            .filter((d, j) => i - n <= j && j <= i)\r\n            .reduce((a, b) => a + b, 0) / (Math.min(n, i) || 1),\r\n      }\r\n      : undefined;\r\n    }).filter(x => x !== undefined);\r\n  }, [data, yFunction, n]);\r\n};\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { DateTime } from 'luxon';\nimport Papa from 'papaparse';\nimport * as d3 from 'd3';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\nimport ChartBars from './ChartBars';\nimport ChartLine from './ChartLine';\nimport { useSimplifiedSeries, useSmoothedSeries } from '../utils/useSmoothedSeries';\nimport domtoimage from 'dom-to-image';\n\n\nconst ChartContainer = styled.div`\n  /* padding: 30px; */\n  width: 100%;\n  margin-top: 10px;\n  /* height: 50vh; */\n  flex: 1;\n  position: relative;\n  transition: all 0.2s;\n`;\n\nconst SvgContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  .axis line, .axis path {\n    stroke: white;\n  }\n\n  .axis text {\n    fill: white;\n    font-size: 12px;\n    font-family: 'Mitr', sans-serif;\n  }\n\n  text {\n    fill: #7F353E;\n  }\n\n  text.text-white {\n    fill: #fff;\n  }\n  \n  .y-axis-deaths {\n    opacity: 0.3;\n\n    path {\n      opacity: 0;\n    }\n  }\n\n  .y-axis {\n    opacity: 0.4;\n\n    path {\n      opacity: 0;\n    }\n  }\n\n  .shadow {\n    filter: drop-shadow( 0px 8px 8px rgba(0, 0, 0, .2));\n    /* Similar syntax to box-shadow */\n  }\n\n  .x-axis text { opacity: 0; }\n  .x-axis-deaths text { opacity: 0; }\n`;\n\nconst Chart = ({\n  processedData,\n  datesRange,\n  padding = { top: 0, right: 0, bottom: 12, left: 40 },\n  breakPoint = 0.7\n}) => {\n\n  const svgRef = useRef(null);\n  const canvasRef = useRef(null);\n  const imageLinkRef = useRef(null);\n\n  const width = 640;\n  const height = 640;\n  const pad = 32;\n  const gutter = 24;\n  const boxHeight = 240;\n  const deathBoxHeight = 160;\n  const boxWidth = width - pad * 2;\n  const boxPadding = 16;\n  const textBoxWidth = 160;\n  const topOffset = 120;\n  const chartPadding = padding;\n\n  const { observe, unobserve, w, h, entry } = useDimensions({\n    onResize: ({ observe, unobserve, width, height, entry }) => {\n      unobserve(); // To stop observing the current target element\n      observe(); // To re-start observing the current target element\n    },\n  });\n\n  const gap = 50;\n\n  const lastestDay = useMemo(() => {\n    const weekDayString = [\n      'อาทิตย์',\n      'จันทร์',\n      'อังคาร',\n      'พุธ',\n      'พฤหัส',\n      'ศุกร์',\n      'เสาร์',\n      'อาทิตย์',\n    ]\n\n    const weekDayColor = [\n      '#C33646',\n      '#D5A21F',\n      '#C55A9A',\n      '#2B9649',\n      '#D5682A',\n      '#31A0C3',\n      '#7E48A4',\n      '#C33646',\n    ]\n\n    const monthString = [\n      '',\n      'ม.ค.',\n      'ก.พ.',\n      'มี.ค.',\n      'เม.ย.',\n      'พ.ค.',\n      'มิ.ย.',\n      'ก.ค.',\n      'ส.ค.',\n      'ก.ย.',\n      'ต.ค.',\n      'พ.ย.',\n      'ธ.ค. ',\n    ]\n    const lastEntry = processedData[processedData.length - 1];\n    const dt = DateTime.fromISO(lastEntry?.date);\n    const dayNum = dt.weekday;\n    return {\n      iso: lastEntry?.date,\n      dateStr: `${dt.get('day')} ${monthString[dt.get('month')]} ${(dt.get('year') + 543) % 100}`,\n      dayColor: weekDayColor[dayNum],\n      weekdayStr: weekDayString[dayNum],\n      weekdayNum: dayNum\n    }\n  }, [processedData]);\n\n  const smoothedNewCases = useSmoothedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  // const smoothedNewCasesNational = useSmoothedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewCases = useSimplifiedSeries(processedData, d => d?.bangkok?.new_cases ?? 0);\n  const nationalNewCases = useSimplifiedSeries(processedData, d => d?.thailand?.NewConfirmed ?? 0);\n  const bangkokNewDeaths = useSimplifiedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n  const smoothedNewDeaths = useSmoothedSeries(processedData, d => d?.bangkok?.new_death ?? 0);\n\n  const paddedWidth = useMemo(() => width - padding.left - padding.right, [width, padding]);\n  const paddedHeight = useMemo(() => height - padding.top - padding.bottom, [height, padding]);\n\n  const scaleX = useMemo(() => d3.scaleTime()\n    .domain(d3.extent(processedData, d => new Date(d.date)))\n    .range([0, boxWidth - boxPadding * 2 - textBoxWidth - chartPadding.left - chartPadding.right])\n    , [processedData, paddedWidth]);\n\n  const scaleY = useMemo(() => d3.scaleLinear()\n    // .domain([0, d3.max(processedData, d => +d?.thailand?.NewConfirmed ?? 0)])\n    .domain([0, d3.max(processedData, d => +d?.bangkok?.new_cases ?? 0)])\n    .range([boxHeight - 2 * boxPadding - chartPadding.top - chartPadding.bottom, 0])\n    , [processedData, paddedHeight]);\n\n  const scaleYDeaths = useMemo(() => d3.scaleLinear()\n    .domain([0, d3.max(processedData, d => +d?.bangkok?.new_death ?? 0)])\n    .range([deathBoxHeight - 2 * boxPadding - chartPadding.top - chartPadding.bottom, 0])\n    , [processedData, paddedHeight]);\n\n  useEffect(() => {\n    if (!svgRef.current)\n      return;\n\n    var svg = d3.select(svgRef.current)\n\n    svg.select(\"g.chart\")\n      .attr(\"transform\",\n        `translate(${pad + textBoxWidth + boxPadding + chartPadding.left},${topOffset + boxPadding + chartPadding.top})`);\n\n    console.log(processedData);\n\n    svg.select(\"g.x-axis\")\n      .attr(\"transform\", `translate(0,${boxHeight - 2 * boxPadding - chartPadding.bottom})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n        .tickSize(0)\n        .tickPadding(8)\n      );\n\n    svg.select(\"g.y-axis\")\n      .call(d3.axisLeft(scaleY)\n        .ticks(7)\n        .tickPadding(8)\n        .tickSize(-(boxWidth - textBoxWidth - boxPadding * 2 - padding.left))\n      );\n\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    svg.select(\"g.chart-death\")\n      .attr(\"transform\",\n        `translate(${pad + textBoxWidth + boxPadding + chartPadding.left},${boxPadding + topOffset + boxHeight + gutter + chartPadding.top})`);\n\n    svg.select(\"g.x-axis-deaths\")\n      // .attr(\"transform\", `translate(0,${paddedHeight * (1 - breakPoint)})`)\n      .attr(\"transform\", `translate(0,${deathBoxHeight - 2 * boxPadding - chartPadding.bottom})`)\n      .call(d3.axisBottom(scaleX)\n        .tickValues(scaleX.domain())\n        .tickFormat(d => DateTime.fromJSDate(d).toISODate())\n        .tickSize(0)\n        .tickPadding(8)\n      );\n\n    svg.select(\"g.y-axis-deaths\")\n      .call(d3.axisLeft(scaleYDeaths)\n        .ticks(5)\n        .tickPadding(8)\n        .tickSize(-(boxWidth - textBoxWidth - boxPadding * 2 - padding.left))\n      );\n\n    // // Add the line\n    // svg.append(\"path\")\n    //   .datum(processedData)\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"steelblue\")\n    //   .attr(\"stroke-width\", 1.5)\n    //   .attr(\"d\", d3.line()\n    //     .x(d => scaleX(new Date(d.date)))\n    //     .y(d => scaleY(d?.bangkok?.new_cases ?? 0))\n    //   )\n  }, [processedData]);\n\n  const downloadPng = () => {\n    console.log(svgRef.current)\n    const scale = 2;\n    const elm = document.getElementById('container');\n    console.log(elm.offsetHeight, elm.offsetWidth)\n    domtoimage.toPng(elm, {\n      height: elm.offsetHeight * scale,\n      width: elm.offsetWidth * scale,\n      style: {\n        transform: `scale(${scale}) translate(${elm.offsetWidth / 2 / scale}px, ${elm.offsetHeight / 2 / scale}px)`\n      },\n    })\n      .then(function (dataUrl) {\n        var link = document.createElement('a');\n        link.download = 'my-image-name.png';\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((err) => console.error(err));\n\n    // var svgString = new XMLSerializer().serializeToString(svgRef.current);\n\n    // var canvas = canvasRef.current;\n    // var ctx = canvas.getContext(\"2d\");\n    // var DOMURL = window.self.URL || window.self.webkitURL || window.self;\n    // var img = new Image();\n    // var svg = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\n    // var url = DOMURL.createObjectURL(svg);\n    // img.onload = function () {\n    //   ctx.drawImage(img, 0, 0);\n    //   var png = canvas.toDataURL(\"image/png\");\n    //   let url = png.replace(/^data:image\\/png/, 'data:application/octet-stream');\n    //   imageLinkRef.current.setAttribute('href', url);\n    //   imageLinkRef.current.click();\n\n    //   // document.querySelector('#png-container').innerHTML = '<img src=\"' + png + '\"/>';\n    //   DOMURL.revokeObjectURL(png);\n    // };\n    // img.src = url;\n  };\n\n  return <>\n    <ChartContainer>\n      <SvgContainer ref={observe}>\n        <div id=\"container\" style={{ textAlign: 'left', display: 'inline-block' }}>\n          <svg\n            id=\"chart\"\n            className=\"d3-component\"\n            width={width}\n            height={height}\n            ref={svgRef}\n            style={{\n              backgroundColor: '#F3E1E3'\n            }}\n          >\n            <text x={pad} y={pad} fontSize={24} dominantBaseline=\"hanging\" fontFamily=\"Mitr\" fontWeight=\"600\">สถานการณ์ COVID-19 ใน</text>\n            <text x={pad} y={pad + 20} fontSize={39} dominantBaseline=\"hanging\" fontFamily=\"Mitr\" fontWeight=\"600\">กรุงเทพมหานคร</text>\n\n            <rect x={width - pad - 160} y={pad} width={160} height={64} rx={16} fill={lastestDay.dayColor} />\n            <text x={width - pad - 80} y={pad + 10} dominantBaseline=\"hanging\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">ประจำวัน {lastestDay.weekdayStr} ที่</text>\n            <text x={width - pad - 80} y={pad + 28} dominantBaseline=\"hanging\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"600\" fontSize={24} class=\"text-white\">{lastestDay.dateStr}</text>\n\n            <g transform={`translate(${pad},${topOffset})`}>\n              <rect width={boxWidth} height={boxHeight} rx={16} fill=\"#C33646\" class=\"shadow\" />\n              <rect width={textBoxWidth} height={boxHeight} rx={16} fill=\"#0002\" />\n              <g transform={`translate(${textBoxWidth / 2},${boxHeight / 2})`}>\n                <text y={-36} dominantBaseline=\"middle\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">ผู้ติดเชื้อยืนยันวันนี้</text>\n                <text y={0} dominantBaseline=\"middle\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"600\" fontSize={48} class=\"text-white\">\n                  +{processedData?.[processedData.length - 1]?.bangkok?.new_cases?.toLocaleString?.()}\n                </text>\n              </g>\n              <text x={textBoxWidth / 2} y={boxHeight - boxPadding} dominantBaseline=\"baseline\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">\n                สะสม {processedData?.[processedData.length - 1]?.bangkok?.accumulated_cases?.toLocaleString?.()}\n              </text>\n\n              {/* AXIS DATE TICKS */}\n              <text\n                x={textBoxWidth + boxPadding + padding.left}\n                y={boxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"start\"\n                fontFamily=\"Mitr\"\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {processedData?.[0]?.date}\n              </text>\n              <text\n                x={boxWidth - boxPadding - padding.right}\n                y={boxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n                fontFamily=\"Mitr\"\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {processedData?.[processedData?.length - 1]?.date}\n              </text>\n            </g>\n            <g class=\"chart\">\n              {/* <ChartBars\n              processedData={nationalNewCases}\n              color=\"#fdd\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            /> */}\n              <g class=\"x-axis axis\"></g>\n              <g class=\"y-axis axis\"></g>\n              <ChartBars\n                processedData={bangkokNewCases}\n                color=\"#fff6\"\n                scaleX={scaleX}\n                scaleY={scaleY}\n              />\n              <ChartLine\n                processedData={smoothedNewCases}\n                color=\"#fff\"\n                scaleX={scaleX}\n                scaleY={scaleY}\n              />\n              {/* <ChartLine\n              processedData={smoothedNewCasesNational}\n              color=\"#f00\"\n              scaleX={scaleX}\n              scaleY={scaleY}\n            /> */}\n            </g>\n\n            <g transform={`translate(${pad},${topOffset + boxHeight + gutter})`}>\n              <rect width={boxWidth} height={deathBoxHeight} rx={16} fill=\"#333031\" class=\"shadow\" />\n              <rect width={textBoxWidth} height={deathBoxHeight} rx={16} fill=\"#fff1\" />\n              <g transform={`translate(${textBoxWidth / 2},${deathBoxHeight / 2 - 8})`}>\n                <text y={-36} dominantBaseline=\"middle\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">ผู้เสียชีวิตยืนยันวันนี้</text>\n                <text y={0} dominantBaseline=\"middle\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"600\" fontSize={48} class=\"text-white\">\n                  +{processedData?.[processedData.length - 1]?.bangkok?.new_death?.toLocaleString?.()}\n                </text>\n                <text y={36} dominantBaseline=\"middle\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">\n                  ปริมณฑล +{processedData?.[processedData.length - 1]?.bangkok?.new_death_outskirt?.toLocaleString?.()}\n                </text>\n              </g>\n              <text x={textBoxWidth / 2} y={deathBoxHeight - boxPadding} dominantBaseline=\"baseline\" textAnchor=\"middle\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} class=\"text-white\">\n                สะสม {processedData?.[processedData.length - 1]?.bangkok?.accumulated_death?.toLocaleString?.()}\n              </text>\n              {/* AXIS DATE TICKS */}\n              <text\n                x={textBoxWidth + boxPadding + padding.left}\n                y={deathBoxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"start\"\n                fontFamily=\"Mitr\"\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {processedData?.[0]?.date}\n              </text>\n              <text\n                x={boxWidth - boxPadding - padding.right}\n                y={deathBoxHeight - boxPadding - padding.bottom + 6}\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n                fontFamily=\"Mitr\"\n                fontWeight=\"400\"\n                fontSize={12}\n                class=\"text-white\">\n                {processedData?.[processedData?.length - 1]?.date}\n              </text>\n            </g>\n            <g class=\"chart-death\">\n              <g class=\"x-axis-deaths axis\"></g>\n              <g class=\"y-axis-deaths axis\"></g>\n              <ChartBars\n                processedData={bangkokNewDeaths}\n                color=\"#fff6\"\n                scaleX={scaleX}\n                scaleY={scaleYDeaths}\n              />\n              <ChartLine\n                processedData={smoothedNewDeaths}\n                color=\"#fff\"\n                scaleX={scaleX}\n                scaleY={scaleYDeaths}\n              />\n            </g>\n\n            <text x={pad} y={height - pad - 20} dominantBaseline=\"bottom\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} fill=\"#222\">รวบรวมข้อมูลจาก ศบค. และ bangkok.go.th/covid19</text>\n            <text x={pad} y={height - pad} dominantBaseline=\"bottom\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} fill=\"#222\">ดูกราฟและไฟล์ข้อมูลได้ที่ taepras.com/bkkcovid19</text>\n\n            {/* <text x={pad} y={height - pad - 20} dominantBaseline=\"bottom\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} fill=\"#222\">รวบรวมข้อมูลจาก ศบค. และ bangkok.go.th/covid19</text>\n          <text x={pad} y={height - pad} dominantBaseline=\"bottom\" fontFamily=\"Mitr\" fontWeight=\"400\" fontSize={16} fill=\"#222\">ดูกราฟและไฟล์ข้อมูลได้ที่ taepras.com/bkkcovid19</text> */}\n          </svg>\n        </div>\n      </SvgContainer>\n    </ChartContainer>\n    <canvas id=\"canvas\" ref={canvasRef} width={width} height={height}></canvas>\n    <button onClick={downloadPng}>Download PNG</button>\n  </>;\n}\n\nexport default Chart;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from \"./components/Chart\";\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { DateTime } from 'luxon';\nimport styled from 'styled-components';\n\nconst GraphicsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n`\n\nconst api_url_daily_cases = \"https://covid19.th-stat.com/api/open/timeline\";\nconst gsheets_url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR5KEVlTJbefwhG7GXg5swMW1rDSctbXuwZR-omHnxdet_DReCYnu0r_CVgzLTxwPqKlz4WMvKOppv1/pub?gid=0&single=true&output=csv\";\n\nconst convDate = (x) => {\n  return `${x.substr(6, 4)}-${x.substr(0, 2)}-${x.substr(3, 2)}`\n}\n\nfunction App() {\n  const [nationalData, setNationalData] = useState();\n  const [bangkokData, setBangkokData] = useState();\n\n  const [startDate, setStartDate] = useState(DateTime.now().minus({ months: 2 }).startOf('day'))\n  const [endDate, setEndDate] = useState(DateTime.now().startOf('day'))\n\n  const datesRange = useMemo(() => {\n    const dates = [];\n    let d = startDate;\n    while (d <= endDate) {\n      dates.push(d.toISODate())\n      d = d.plus({ days: 1 });\n    }\n    return dates;\n  }, [startDate, endDate]);\n\n\n  useEffect(() => {\n    axios.get(api_url_daily_cases).then((res) => {\n      console.log(res.data);\n      setNationalData(res.data);\n    });\n\n    axios.get(gsheets_url).then((res) => {\n      const data = Papa.parse(res.data, {\n        header: true,\n        dynamicTyping: true\n      });\n      console.log('gsheets', data);\n      const dt = DateTime.fromISO(data.data[data.data.length - 1].date);\n      setEndDate(dt);\n      setStartDate(dt.minus({ months: 2 }).startOf('day'));\n      setBangkokData(data);\n      // setData(res.data);\n    });\n  }, []);\n\n  const processedData = useMemo(() => {\n    if (!nationalData || !bangkokData)\n      return [];\n\n    const filteredNational = nationalData.Data.filter(x => {\n      const dt = DateTime.fromJSDate(new Date(x.Date));\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n\n    // console.log('bkk', nationalData);\n    // console.log('bkk', bangkokData);\n    const filteredGSheets = bangkokData.data.filter(x => {\n      const dt = DateTime.fromISO(x.date);\n      return (\n        dt >= startDate.startOf('day') &&\n        dt <= endDate.endOf('day')\n      )\n    });\n    // console.log('bkk', filteredGSheets);\n\n    const combined = datesRange.map(date => {\n      return {\n        date: date,\n        thailand: filteredNational?.filter(d => {\n          // console.log('zzzz', new Date(d.Date), date)\n          return convDate(d.Date) === date\n          // return true\n          // // return DateTime.fromJSDate(new Date(d.Date)).toISODate() === date\n        })?.[0] ?? {},\n        bangkok: filteredGSheets?.filter(d => d.date === date)?.[0] ?? {}\n      }\n    })\n\n    console.log('gs', filteredGSheets, combined);\n\n    return combined;\n  }, [nationalData, bangkokData, startDate, endDate, datesRange]);\n\n  return (\n    <div className=\"App\">\n      <GraphicsContainer>\n        {/* <h1>สถานการณ์โควิดใน กทม.</h1> */}\n        <Chart\n          datesRange={datesRange}\n          processedData={processedData} />\n      </GraphicsContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}